{
  "id": "gridsnap",
  "name": "GridSnap",
  "description": "Upload an image of a table/grid. This tool will parse the image, allow you to verify the data, and then import it into the specified Smartsheet.",
  "steps": [
    {
      "stepId": "1-initial-setup",
      "title": "Step 1: Initial Setup",
      "type": "form",
      "content": "Enter the name of your new Smartsheet and upload the image you'd like to use.",
      "fields": [
        {
          "id": "sheetName",
          "label": "What would you like the name of the new sheet to be?",
          "type": "text",
          "required": true,
          "attributes": { "placeholder": "Enter Sheet Name" }
        },
        {
          "id": "image",
          "label": "Image File",
          "type": "file",
          "required": true,
          "attributes": { "accept": "image/png, image/jpeg, image/webp" }
        }
      ],
      "actions": [
        {
          "type": "worker",
          "actionId": "startImageParsing",
          "label": "Parse Image",
          "backend": {
            "workerFunctionName": "toolkit-action-gemini-prompt",
            "inputSource": "formData",
            "outputKey": "parsedColumns",
            "staticContext": {
              "prompt": "Provided this image, extract the table data. Rules: 1. Ignore UI elements. 2. Focus on the actual grid data. 3. Respond in a single JSON object with two keys: 'columns' and 'rows'. The 'columns' key should be an array of strings representing the exact header text. The 'rows' key should be an array of objects, where each object's keys correspond to the extracted column headers."
            }
          },
          "onSuccess": [
            {
              "condition": null,
              "then": { "goToStep": "2-verify-columns" }
            }
          ],
          "onError": { "goToStep": "5-error" }
        }
      ]
    },
    {
      "stepId": "2-verify-columns",
      "title": "Step 2: Verify Columns",
      "type": "form",
      "content": "The AI has extracted the following columns. Verify the headers and save them to your Smartsheet before proceeding.",
      "fields": [
        {
          "id": "columns",
          "label": "Column Data",
          "type": "grid",
          "sourceDataKey": "parsedColumns",
          "sourceDataPath": "rows"
        }
      ],
      "actions": [
        {
          "type": "worker",
          "actionId": "createColumns",
          "label": "Create Smartsheet Columns",
          "backend": {
            "workerFunctionName": "toolkit-action-create-columns",
            "inputSource": "formData",
            "outputKey": "createdColumns"
          },
          "onSuccess": [ 
            {
              "condition": null,
              "then": { "goToStep": "3-retrieve-grid" }
            }
          ],
          "onError": { "goToStep": "5-error" }
        }
      ]
    },
    {
      "stepId": "3-retrieve-grid",
      "title": "Step 3: Retrieve Grid Data",
      "type": "form",
      "content": "Proceed to the next step to verify the extracted grid data.",
      "actions": [
        {
          "type": "worker",
          "actionId": "retrieveGridData",
          "label": "Retrieve Grid Data",
          "backend": {
            "workerFunctionName": "toolkit-action-gemini-prompt",
            "inputSource": "formData",
            "outputKey": "parsedRows",
            "staticContext": {
              "prompt": "Retrieve the grid data from the image provided. Ignore the column header row. If the data type is a DATE, always return DATE in the format YYYY-MM-DD (ISO 8601). If the data type is a DATETIME, always return DATETIMEs in the format YYYY-MM-DDTHH:MM:SSZ (ISO 8601, UTC). If it's a CONTACT_LIST, return a valid email address. If you're not able to determine what the email address is return a placeholder in the format visible_name@example.com."
            }
          },
          "onSuccess": [
            {
              "condition": null,
              "then": { "goToStep": "4-verify-rows" }
            }
          ],
          "onError": { "goToStep": "5-error" }
        }
      ]
    },
    {
      "stepId": "4-verify-rows",
      "title": "Step 4: Verify Rows",
      "type": "form",
      "content": "Review the extracted row data. If it looks correct, import it into the newly created columns.",
      "fields": [
        {
          "id": "rows",
          "label": "Row Data",
          "type": "grid",
          "sourceDataKey": "parsedRows",
          "sourceDataPath": "rows",
          "editable": false
        }
      ],
      "actions": [
        {
          "type": "worker",
          "actionId": "createRows",
          "label": "Import Rows to Smartsheet",
          "backend": {
            "workerFunctionName": "toolkit-tool-gridsnap",
            "inputSource": "formData",
            "outputKey": "createdRows"
          },
          "onSuccess": [
            {
              "condition": null,
              "then": { "goToStep": "5-success" }
            }
          ],
          "onError": { "goToStep": "5-error" }
        }
      ]
    },
    {
      "stepId": "5-success",
      "title": "Import Successful!",
      "type": "success",
      "content": "The data has been successfully imported into your Smartsheet sheet."
    },
    {
      "stepId": "5-error",
      "title": "An Error Occurred",
      "type": "error",
      "content": "We couldn't process your request. Please review the error details below."
    }
  ]
}